/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SwapToken, SwapTokenInterface } from "../../contracts/SwapToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "reward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600b81526020016a2432b0b63a342a37b5b2b760a91b8152506040518060400160405280600381526020016212131560ea1b815250816003908161006091906102bb565b50600461006d82826102bb565b5050600580546001600160a01b031916339081179091556100ae9150610091601290565b61009c90600a610478565b6100a990620f424061048e565b6100b3565b6104b8565b6001600160a01b0382166100e25760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100ee600083836100f2565b5050565b6001600160a01b03831661011d57806002600082825461011291906104a5565b9091555061018f9050565b6001600160a01b038316600090815260208190526040902054818110156101705760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100d9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166101ab576002805482900390556101ca565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161020f91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061024657607f821691505b60208210810361026657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102b657806000526020600020601f840160051c810160208510156102935750805b601f840160051c820191505b818110156102b3576000815560010161029f565b50505b505050565b81516001600160401b038111156102d4576102d461021c565b6102e8816102e28454610232565b8461026c565b6020601f82116001811461031c57600083156103045750848201515b600019600385901b1c1916600184901b1784556102b3565b600084815260208120601f198516915b8281101561034c578785015182556020948501946001909201910161032c565b508482101561036a5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156103ca578085048111156103ae576103ae610379565b60018416156103bc57908102905b60019390931c928002610393565b935093915050565b6000826103e157506001610472565b816103ee57506000610472565b8160018114610404576002811461040e5761042a565b6001915050610472565b60ff84111561041f5761041f610379565b50506001821b610472565b5060208310610133831016604e8410600b841016171561044d575081810a610472565b61045a600019848461038f565b806000190482111561046e5761046e610379565b0290505b92915050565b600061048760ff8416836103d2565b9392505050565b808202811582820484141761047257610472610379565b8082018082111561047257610472610379565b6107e5806104c76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461012957806370a08231146101385780638da5cb5b1461016157806395d89b411461018c578063a9059cbb14610194578063dd62ed3e146101a757600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806321670f221461010157806323b872dd14610116575b600080fd5b6100b66101e0565b6040516100c3919061062e565b60405180910390f35b6100df6100da366004610698565b610272565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b61011461010f366004610698565b61028c565b005b6100df6101243660046106c2565b6102fe565b604051601281526020016100c3565b6100f36101463660046106ff565b6001600160a01b031660009081526020819052604090205490565b600554610174906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b6100b6610322565b6100df6101a2366004610698565b610331565b6100f36101b5366004610721565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101ef90610754565b80601f016020809104026020016040519081016040528092919081815260200182805461021b90610754565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b5050505050905090565b60003361028081858561033f565b60019150505b92915050565b6005546001600160a01b031633146102e35760405162461bcd60e51b815260206004820152601560248201527413db9b1e481bdddb995c8818d85b881c995dd85c99605a1b60448201526064015b60405180910390fd5b6005546102fa906001600160a01b03168383610351565b5050565b60003361030c8582856103b0565b610317858585610351565b506001949350505050565b6060600480546101ef90610754565b600033610280818585610351565b61034c838383600161042f565b505050565b6001600160a01b03831661037b57604051634b637e8f60e11b8152600060048201526024016102da565b6001600160a01b0382166103a55760405163ec442f0560e01b8152600060048201526024016102da565b61034c838383610504565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610429578181101561041a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102da565b6104298484848403600061042f565b50505050565b6001600160a01b0384166104595760405163e602df0560e01b8152600060048201526024016102da565b6001600160a01b03831661048357604051634a1406b160e11b8152600060048201526024016102da565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104f691815260200190565b60405180910390a350505050565b6001600160a01b03831661052f578060026000828254610524919061078e565b909155506105a19050565b6001600160a01b038316600090815260208190526040902054818110156105825760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102da565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105bd576002805482900390556105dc565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161062191815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561065c576020818601810151604086840101520161063f565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461069357600080fd5b919050565b600080604083850312156106ab57600080fd5b6106b48361067c565b946020939093013593505050565b6000806000606084860312156106d757600080fd5b6106e08461067c565b92506106ee6020850161067c565b929592945050506040919091013590565b60006020828403121561071157600080fd5b61071a8261067c565b9392505050565b6000806040838503121561073457600080fd5b61073d8361067c565b915061074b6020840161067c565b90509250929050565b600181811c9082168061076857607f821691505b60208210810361078857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028657634e487b7160e01b600052601160045260246000fdfea2646970667358221220e30a2c5b5b72e7108d8d9dcc69cc04ecf9c5d7ff934c79cb98b7062c49f22da464736f6c634300081c0033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapToken__factory {
    return super.connect(runner) as SwapToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new Interface(_abi) as SwapTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SwapToken {
    return new Contract(address, _abi, runner) as unknown as SwapToken;
  }
}
